name: categorizabrasil-stack

services:
  directus-database:
    image: postgis/postgis:16-master
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - ../cms/data/database:/var/lib/postgresql/data
    networks:
      - categorizanet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$${POSTGRES_USER}\" -d \"$${POSTGRES_DB}\" -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  directus-cache:
    image: redis:6
    restart: unless-stopped
    networks:
      - categorizanet
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  directus-minio:
    image: minio/minio:latest
    restart: unless-stopped
    command: server /data --console-address ":9001"
    networks:
      - categorizanet
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - ../cms/data/minio:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  directus-minio-setup:
    image: minio/mc:latest
    depends_on:
      directus-minio:
        condition: service_started
    networks:
      - categorizanet
    restart: "no"
    entrypoint: >
      /bin/sh -c "
        until mc alias set minio http://directus-minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}; do
          sleep 2;
        done;
        mc mb -p minio/${MINIO_BUCKET} || true;
        exit 0;
      "

  directus:
    image: directus/directus:11.12.0
    restart: unless-stopped
    depends_on:
      directus-database:
        condition: service_healthy
      directus-cache:
        condition: service_healthy
      directus-minio-setup:
        condition: service_completed_successfully
    ports:
      - "8055:8055"
    networks:
      - categorizanet
    environment:
      SECRET: ${DIRECTUS_SECRET}
      PUBLIC_URL: ${PUBLIC_URL}
      TRUST_PROXY: "true"
      WEBSOCKETS_ENABLED: "true"

      DB_CLIENT: "pg"
      DB_HOST: directus-database
      DB_PORT: "5432"
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

      CACHE_ENABLED: ${CACHE_ENABLED}
      CACHE_AUTO_PURGE: ${CACHE_AUTO_PURGE}
      CACHE_STORE: "redis"
      REDIS: "redis://directus-cache:6379"
      
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}

      CORS_ENABLED: "true"
      CORS_ORIGIN: ${CORS_ORIGIN}
    volumes:
      - ../cms/extensions:/directus/extensions

  app:
    build:
      context: ..
      dockerfile: Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV}
      NEXT_PUBLIC_DIRECTUS_URL: ${NEXT_PUBLIC_DIRECTUS_URL}
      NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
      DIRECTUS_INTERNAL_URL: ${DIRECTUS_INTERNAL_URL}
      DIRECTUS_STATIC_TOKEN: ${DIRECTUS_STATIC_TOKEN}
      API_TOKEN: ${API_TOKEN}
      API_TIMEOUT_MS: ${API_TIMEOUT_MS}
      NEXT_PUBLIC_MAPBOX_API_KEY: ${NEXT_PUBLIC_MAPBOX_API_KEY}
      NEXT_PUBLIC_MAPBOX_STYLE: ${NEXT_PUBLIC_MAPBOX_STYLE}
    depends_on:
      directus:
        condition: service_started
    ports:
      - "3001:3000"
    container_name: site-categoriza-prod
    networks:
      - categorizanet

networks:
  categorizanet:
    driver: bridge
